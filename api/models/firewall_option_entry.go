// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FirewallOptionEntry firewall option entry
//
// swagger:model FirewallOptionEntry
type FirewallOptionEntry struct {

	// Allow any matching rule
	Allow bool `json:"allow,omitempty"`

	// Drop any matching rule
	Drop bool `json:"drop,omitempty"`

	// Set a fwmark for any matching rule
	FwMark int64 `json:"fwMark,omitempty"`

	// Record or dump for matching rule
	Record bool `json:"record,omitempty"`

	// Redirect any matching rule
	Redirect bool `json:"redirect,omitempty"`

	// Redirect any matching rule
	RedirectPortName string `json:"redirectPortName,omitempty"`

	// Trap anything matching rule
	Trap bool `json:"trap,omitempty"`
}

// Validate validates this firewall option entry
func (m *FirewallOptionEntry) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this firewall option entry based on context it is used
func (m *FirewallOptionEntry) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FirewallOptionEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FirewallOptionEntry) UnmarshalBinary(b []byte) error {
	var res FirewallOptionEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
